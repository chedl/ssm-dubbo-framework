<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd
	   		http://www.springframework.org/schema/context 
	   		http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 引入dubbo配置文件 -->		
	<import resource="classpath:spring-dubbo.xml" />
	
	<!-- 自动扫描包路径 -->
	<context:component-scan base-package="com.chedl.*" />

	<!-- 读取jdbc配置文件，配置数据库相关参数 -->
	<bean id="jdbcConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver.class}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultReadOnly" value="${jdbc.default.read.only}" />
		<property name="filters" value="${jdbc.filters}" />
		<property name="maxActive" value="${jdbc.max.active}" />
		<property name="initialSize" value="${jdbc.initial.size}" />
		<property name="maxWait" value="${jdbc.max.wait}" />
		<property name="removeAbandoned" value="${jdbc.remove.abandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.remove.abandoned.timeout}" />
		<property name="minIdle" value="${jdbc.min.idle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.time.between.eviction.runs.millis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.min.evictable.idle.time.millis}" />
		<property name="validationQuery" value="${jdbc.validation.query}" />
		<property name="testWhileIdle" value="${jdbc.test.while.idle}" />
		<property name="testOnBorrow" value="${jdbc.test.on.borrow}" />
		<property name="testOnReturn" value="${jdbc.test.on.return}" />
		<property name="poolPreparedStatements" value="${jdbc.pool.prepared.statements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.max.pool.prepared.statement.per.connection.size}" />
		<property name="maxOpenPreparedStatements" value="${jdbc.max.open.prepared.statements}" />
	</bean>

	<!--配置sqlSessionFactory对象  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/chedl/service/user/mapper/xml/**.xml" />
	</bean>
	<!-- 配置扫描Dao接口包下的所有接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="basePackage" value="com.chedl.service.user.mapper" />
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource" />
	</bean>
</beans>